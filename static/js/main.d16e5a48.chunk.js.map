{"version":3,"sources":["components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","style","backgroundColor","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","document","body","countries","registerLocale","require","App","useState","apiData","setApiData","getState","setGetState","state","setState","apiUrl","process","useEffect","fetch","then","res","json","data","kelvinToFarenheit","k","toFixed","Container","Card","border","align","color","Body","Form","Group","Control","type","class","onChange","event","target","value","placeholder","Button","onClick","main","CardDeck","name","Text","getName","sys","country","temp","weather","feels_like","temp_max","temp_min","humidity","Spinner","animation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d16e5a48.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar , Nav } from 'react-bootstrap'\r\n\r\n\r\nexport default function Header() {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Navbar style={{backgroundColor:\"#161b22\"}} variant=\"dark\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#home\">React Weather App</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"https://mrpboti.github.io/OpenWeatherMap-React-Bootstrap/\">Home</Nav.Link>\r\n            <Nav.Link href=\"https://github.com/MrPboti/OpenWeatherMap-React-Bootstrap\">Github</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n</Navbar>\r\n\r\n  <br />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Card from 'react-bootstrap/Card'\nimport CardDeck from 'react-bootstrap/CardDeck'\nimport Container from 'react-bootstrap/Container'\nimport Header from './components/Header'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport countries from 'i18n-iso-countries';\n\ndocument.body.style.backgroundColor = \"#0d1117\";\ncountries.registerLocale(require('i18n-iso-countries/langs/en.json'));\n\nfunction App() {\n  // State\n  const [apiData, setApiData] = useState({});\n  const [getState, setGetState] = useState('tehran');\n  const [state, setState] = useState('tehran');\n\n  // API KEY AND URL\n  const apiKey = process.env.REACT_APP_API_KEY;\n  const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${state}&appid=${apiKey}`;\n\n  // Side effect\n  useEffect(() => {\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((data) => setApiData(data));\n  }, [apiUrl]);\n\n  const inputHandler = (event) => {\n    setGetState(event.target.value);\n  };\n\n  const submitHandler = () => {\n    setState(getState);\n  };\n\n  const kelvinToFarenheit = (k) => {\n    return (k - 273.15).toFixed(2);\n  };\n\n\n\n  return (\n    <div>\n      <Header/>\n    <Container>\n      <Card style={{backgroundColor:\"#0d1117\" , border:\" 2px solid #21262d\"}}>\n      <div align = \"center\">\n        <Card.Header className=\"h1\" style={{backgroundColor:\"#0d1117\" , color:\"#c9d1d9\"}}>Get Weather</Card.Header>\n        <Card.Body style={{backgroundColor:\"#0d1117\"}}>\n          <Form.Group>\n            <Form.Control\n              style={{color:\"#c9d1d9\",\n              backgroundColor:\"#090d13\",\n              border:\" 2px solid #21262d\"}} \n              type=\"text\" \n              id=\"location-name\"\n              class=\"form-control\"\n              onChange={inputHandler}\n              value={getState}\n              placeholder=\"search weather by city\"/>\n            </Form.Group>\n            <Button style={{backgroundColor:\"#238636\" ,  border: \"#238636\"}} onClick={submitHandler}>Search</Button>\n          </Card.Body>\n        </div>\n      </Card>\n    </Container>\n      \n      <br></br>\n      \n        <Container style={{color:\"#c9d1d9\"}}>\n          <Card style={{backgroundColor:\"#0d1117\" , border:\" 2px solid #21262d\"}} >\n          {apiData.main ? ( \n            <div align = \"center\">\n              <br></br>\n          <Container>\n            <CardDeck>\n              <Card style={{border: \"#21262d\"}}>\n                <Card.Header className=\"h3\" style={{backgroundColor:\"#161b22\" , color:\"#8957e5\"}}>Location</Card.Header>\n                <Card.Body style={{backgroundColor:\"#0d1117\"}}>\n                <h2>{apiData.name}</h2>\n                <Card.Text className=\"h6\" style={{color:\"#388afc\"}}>\n                  {countries.getName(apiData.sys.country, 'en')}\n                </Card.Text>\n                </Card.Body>\n              </Card>\n              <Card style={{border: \"#21262d\"}}>\n                <Card.Header className=\"h3\" style={{backgroundColor:\"#161b22\" , color:\"#da3633\"}}>Temperature</Card.Header>\n                \n                <Card.Body style={{backgroundColor:\"#0d1117\"}}>\n                  <h2>{kelvinToFarenheit(apiData.main.temp)}&deg;C</h2>\n                  <Card.Text className=\"h6\" style={{color:\"#e3b341\"}}>\n                    {apiData.weather[0].main}\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </CardDeck>\n          </Container>\n\n          <Container>\n            <CardDeck>\n              <Card style={{border: \"#21262d\"}}>\n                <Card.Header className=\"h5\" style={{backgroundColor:\"#161b22\" , color:\"#e3b341\"}}>Feels Like</Card.Header>\n                <Card.Body style={{backgroundColor:\"#0d1117\"}}>\n                <Card.Text className=\"h6\">\n                  {kelvinToFarenheit(apiData.main.feels_like)}&deg;C\n                </Card.Text>\n                </Card.Body>\n              </Card>\n              <Card style={{border: \"#21262d\"}}>\n                <Card.Header className=\"h5\" style={{backgroundColor:\"#161b22\" , color:\"#da3633\"}}>Temp Max</Card.Header>\n                <Card.Body style={{backgroundColor:\"#0d1117\"}}>\n                <Card.Text className=\"h6\">\n                  {kelvinToFarenheit(apiData.main.temp_max)}&deg; C\n                </Card.Text>\n                </Card.Body>\n              </Card>\n              <Card style={{border: \"#21262d\"}}>\n                <Card.Header className=\"h5\" style={{backgroundColor:\"#161b22\" , color:\"#8957e5\"}}>Temp Min</Card.Header>\n                <Card.Body style={{backgroundColor:\"#0d1117\"}}>\n                <Card.Text className=\"h6\">\n                  {kelvinToFarenheit(apiData.main.temp_min)}&deg; C\n                </Card.Text>\n                </Card.Body>\n              </Card>\n              <Card style={{border: \"#21262d\"}}>\n                <Card.Header className=\"h5\" style={{backgroundColor:\"#161b22\" , color:\"#388afc\"}}>Humidity</Card.Header>\n                <Card.Body style={{backgroundColor:\"#0d1117\"}}>\n                <Card.Text className=\"h6\">\n                  {apiData.main.humidity} %\n                </Card.Text>\n                </Card.Body>\n              </Card>\n            </CardDeck>\n          </Container>\n\n          </div>\n          ) : (<div align = \"center\"><Spinner animation=\"border\" /></div>)}\n        </Card>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}